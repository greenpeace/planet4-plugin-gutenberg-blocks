---
version: 2.1

workflow_definitions:
  on_pr: &on_pr
    context: org-global
    filters:
      branches:
        ignore: main
  on_main: &on_main
    context: org-global
    filters:
      branches:
        only: main
  on_tag: &on_tag
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\p{Digit}+\.\p{Digit}+.*/

workflows:
  branch:
    jobs:
      - php74-tests:
          <<: *on_pr
      - frontend-tests:
          <<: *on_pr
      - acceptance-tests:
          <<: *on_pr
      - commitlint:
          <<: *on_pr
      - create-zip:
          context: org-global
          filters:
            branches:
              ignore: main
            tags:
              only: /^v\p{Digit}+\.\p{Digit}+.*/
      - request-instance:
          <<: *on_pr
          requires:
            - create-zip
      - instance-ready:
          <<: *on_pr
          type: approval
          requires:
            - request-instance
      - comment-pr:
          <<: *on_pr
          requires:
            - instance-ready
      - a11y-tests:
          <<: *on_pr
          requires:
            - instance-ready
      - publish-zip:
          <<: *on_tag
          requires:
            - create-zip
      - reset-instance:
          <<: *on_main

job-references:
  docker_auth: &docker_auth
    username: $DOCKERHUB_USERNAME
    password: $DOCKERHUB_PASSWORD

  setup_environment: &setup_environment
    name: Setup environment variables
    command: |
      echo "export PATH=$HOME/.composer/vendor/bin:$PATH" >> $BASH_ENV
      source /home/circleci/.bashrc

  install_dependencies: &install_dependencies
    name: Install dependencies
    command: composer install

  php_job: &php_job
    environment:
      - WP_TESTS_DIR: "/tmp/wordpress-tests-lib"
      - WP_CORE_DIR: "/tmp/wordpress/"
    steps:
      - checkout
      - run: *setup_environment
      - run: *install_dependencies
      - run:
          name: phpcs
          command: |
            mkdir -p /tmp/test-results/phpcs
            vendor/bin/phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs
            vendor/bin/phpcs --report=junit --report-file=/tmp/test-results/phpcs/$CIRCLE_STAGE.xml
      - run:
          name: phpunit
          when: always
          command: |
            mkdir -p /tmp/test-results/phpunit
            rm -rf $WP_TESTS_DIR $WP_CORE_DIR
            base=$(curl -s https://raw.githubusercontent.com/greenpeace/planet4-base/main/composer.json)
            WP_VERSION=$(jq -r '.extra["wp-version"] // empty' \<<< "${base}")
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 $WP_VERSION
            XDEBUG_MODE=coverage vendor/bin/phpunit --log-junit /tmp/test-results/phpunit/$CIRCLE_STAGE.xml --coverage-html /tmp/coverage-report --coverage-text
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/coverage-report

  p4_instance_conf: &p4_instance_conf
    docker:
      - image: greenpeaceinternational/p4-builder:latest
        auth:
          <<: *docker_auth
    working_directory: /home/circleci/
    environment:
      APP_HOSTNAME: www.planet4.test
      APP_HOSTPATH:
      APP_ENVIRONMENT: development
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      TYPE: "Build"
      WP_DB_NAME: planet4-base_wordpress
      WP_TITLE: Greenpeace Base Development

commands:
  install-instance:
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout:
          path: /home/circleci/checkout/planet4-plugin-gutenberg-blocks
      - run:
          name: Build - Configure
          command: |
            mkdir -p /tmp/workspace/var
            mkdir -p /tmp/workspace/src
            echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run:
          name: Build - Build containers
          working_directory: /home/circleci
          command: |
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              BRANCH=contrib
              git --git-dir=/home/circleci/checkout/planet4-plugin-gutenberg-blocks/.git checkout -b contrib
              echo "Using tmp branch contrib for fork PR $CIRCLE_PR_NUMBER"
            else
              BRANCH="${CIRCLE_BRANCH}"
              echo "Plugin gutenberg blocks branch is ${CIRCLE_BRANCH}"
            fi
            PLUGIN_GUTENBERG_BLOCKS_BRANCH=dev-${BRANCH}#${CIRCLE_SHA1} \
            MASTER_THEME_BRANCH=dev-main \
            MERGE_SOURCE=git@github.com:greenpeace/planet4-base.git \
            MERGE_REF=main \
            make ci
      - run:
          name: Test - Clone planet4-docker-compose
          command: |
            git clone --depth 1 https://github.com/greenpeace/planet4-docker-compose

  run-tests:
    parameters:
      test-name:
        type: string
      test-command:
        type: string
      extract-command:
        type: string
      env:
        type: string
        default: |
          export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
          export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
          export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}
    steps:
      - run:
          name: Setup for test
          command: |
            << parameters.env >>
            make -C planet4-docker-compose ci
      - run:
          name: << parameters.test-name >>
          command: |
            << parameters.env >>
            << parameters.test-command >>
      - run:
          name: Test - Extract test artifacts
          when: always
          command: |
            << parameters.env >>
            << parameters.extract-command >>
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
      - store_test_results:
          path: planet4-docker-compose/artifacts
      - store_artifacts:
          path: planet4-docker-compose/artifacts

jobs:
  php74-tests:
    <<: *php_job
    docker:
      - image: greenpeaceinternational/p4-unit-tests:php7.4
        auth:
          <<: *docker_auth
      - image: cimg/mysql:5.7
        auth:
          <<: *docker_auth

  frontend-tests:
    docker:
      - image: greenpeaceinternational/p4-unit-tests:node14.19.3
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run:
          name: Lint CSS
          when: always
          command: stylelint "assets/src/styles/**/*.scss"
      - run:
          name: Lint JS
          when: always
          # For now lint only changed files to avoid bulk fixing.
          command: |
            changed_files=$(git diff --name-only main...HEAD -- {public/js,tests/js,assets/src}/**/*.js)
            echo "Changed files:"
            echo $changed_files | tr " " "\n"
            if [ -z "$changed_files" ]; then exit 0; fi
            npm install && eslint --ext .js $(echo "$changed_files" | xargs)
      - store_test_results:
          path: /tmp/test-results

  commitlint:
    docker:
      - image: greenpeaceinternational/p4-unit-tests:node14.19.3
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run:
          name: Lint commit messages
          command: npx commitlint -V --from main --to ${CIRCLE_SHA1}

  acceptance-tests:
    <<: *p4_instance_conf
    steps:
      - install-instance
      - run-tests:
          test-name: Acceptance tests
          test-command: make -C planet4-docker-compose test
          extract-command: make -C planet4-docker-compose ci-extract-artifacts

  a11y-tests:
    docker:
      - image: greenpeaceinternational/p4-unit-tests:node14.19.3
        auth:
          <<: *docker_auth
    working_directory: /home/circleci/
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Accessibility tests
          command: |
            home="https://www-dev.greenpeace.org/test-$(cat /tmp/workspace/test-instance)/"
            search="https://www-dev.greenpeace.org/test-$(cat /tmp/workspace/test-instance)/?s="
            curl -s https://raw.githubusercontent.com/greenpeace/planet4-base/main/pa11y/.pa11yci | jq ' .urls = ["'"$home"'", "'"$search"'"]' > pa11y.json
            pa11y-ci -c pa11y.json -T 1000 --reporter=pa11y-ci-reporter-html
      - store_artifacts:
          path: /home/circleci/pa11y-ci-report

  request-instance:
    environment:
      GOOGLE_PROJECT_ID: planet-4-151612
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Check if this is for an open PR
          command: check-pr-exists.sh "$(cat /tmp/workspace/commit-message)"
      - run:
          name: Book instance
          command: |
            JIRA_USERNAME=planet4 book-test-instance.py \
            --pr-url $(cat /tmp/workspace/pr) \
            --results /tmp/workspace/booking.json >/tmp/workspace/test-instance
            echo "https://app.circleci.com/pipelines/github/greenpeace/planet4-test-$(cat /tmp/workspace/test-instance)/"
      - run: activate-gcloud-account.sh
      - run:
          name: Put zip in cloud storage
          command: |
            filename="planet4-plugin-gutenberg-blocks.zip"
            echo "planet4-packages/planet4-plugin-gutenberg-blocks/${CIRCLE_SHA1}.zip" > /tmp/workspace/zip-path
            gs_path="gs://$(cat /tmp/workspace/zip-path)"
            gsutil -q stat "$gs_path" || gsutil cp "/tmp/workspace/$filename" "$gs_path"
      - run:
          name: Commit to test instance repo
          command: trigger_test_instance.sh planet4-plugin-gutenberg-blocks false
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - test-instance
            - booking.json
            - pr

  comment-pr:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Check if there is a PR
          command: |
            if [ ! -f /tmp/workspace/pr ]; then
              circleci-agent step halt
            fi
      - run:
          name: Post comment to PR
          command: |
            post-comment-to-pr.py \
            --pr-url $(cat /tmp/workspace/pr) \
            --test-instance $(cat /tmp/workspace/test-instance)

  create-zip:
    docker:
      - image: mhart/alpine-node:14
        auth:
          <<: *docker_auth
    steps:
      - run: apk add zip git openssh-client python2 make g++
      - checkout
      - run: git submodule init && git submodule update
      - run: mkdir -p /tmp/workspace/
      - run:
          name: Extract commit message
          command: git log --format=%B -n 1 $CIRCLE_SHA1 > /tmp/workspace/commit-message
      - run:
          name: Install npm dependencies
          command: PUPPETEER_SKIP_DOWNLOAD=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci --unsafe-perm=true
      - run:
          name: Build assets
          command: npm run build
      - run:
          name: Remove unnecessary files
          command: rm -rf .circleci .git .githooks assets/src bin
      - run:
          name: Inject version to composer
          command: |
            apk add jq
            cat composer.json | jq --arg version ${CIRCLE_TAG} '. + {version: $version}' > tmp.json
            mv -f tmp.json composer.json
      - run:
          name: Create zip file
          command: zip -r /tmp/workspace/planet4-plugin-gutenberg-blocks.zip . -x "node_modules/*"
      - run:
          name: Zip file size sanity check
          command: |
            ls -lh /tmp/workspace/planet4-plugin-gutenberg-blocks.zip
            if [ $(wc -c </tmp/workspace/planet4-plugin-gutenberg-blocks.zip) -ge 5000000 ]; then
              echo "Zip file size exceeds 5MB, probably something went wrong."
              exit 1
            fi
      - persist_to_workspace:
          root: .
          paths:
            - composer.json
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - planet4-plugin-gutenberg-blocks.zip
            - commit-message

  publish-zip:
    docker:
      - image: mhart/alpine-node:14
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: apk add curl jq
      - run:
          name: Get upload url for this tag
          command: |
            curl https://api.github.com/repos/greenpeace/planet4-plugin-gutenberg-blocks/releases/tags/${CIRCLE_TAG} |
                jq -r .upload_url |
                sed 's/{.*}/?name=planet4-plugin-gutenberg-blocks.zip/' > /tmp/workspace/upload_url
            cat /tmp/workspace/upload_url
      - run:
          name: Upload zip file
          command: |
            curl \
                --fail \
                -H "Authorization: token ${GITHUB_RELEASES_TOKEN}" \
                -H "Content-Type: application/zip" \
                --data-binary @/tmp/workspace/planet4-plugin-gutenberg-blocks.zip \
                "$(cat /tmp/workspace/upload_url)" | jq

  reset-instance:
    environment:
      GOOGLE_PROJECT_ID: planet-4-151612
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - run:
          name: Get merge commit test instance
          command: |
            instance=$(find-commit-test-instance.py)
            echo "$instance" >/tmp/workspace/test-instance
      - run:
          name: Activate gcloud
          command: activate-gcloud-account.sh
      - run:
          name: Commit to test instance repo
          command: trigger_test_instance.sh planet4-plugin-gutenberg-blocks true
